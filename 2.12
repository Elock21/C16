1)
#include <iostream>
using namespace std;
struct elem
{
int nr;
elem *urm;
} *inc, *sf, *aux, *aux2;
int main ()
{
int i;
inc = new elem;
cin >> inc->nr;
inc->urm = NULL;
sf = inc;
for (i = 2; i <= 7; i++)
{
aux = new elem;
cin >> aux->nr;
aux->urm=NULL;
sf->urm = aux;
sf = aux;
}
cout<<"Lista: ";
aux = inc;
while (aux != NULL)
{
cout << aux->nr << ' ';
aux = aux->urm;
}
cout << endl;
///a)sterge primul element
/*
aux=inc;
inc=inc->urm;
delete aux;
*/
///b)sterge ultimul element
/*
aux=inc;
while(aux->urm!=sf)
aux=aux->urm;
sf=aux;
aux=aux->urm;
delete aux;
sf->urm=NULL;

*/
///c)cauta o anumita valoare
/*
aux=inc;
int numar;
cout<<"Numarul de cautat: ";cin>>numar;
while(aux!=NULL && aux->nr!=numar)
aux=aux->urm;
if(aux==NULL) cout<<"Nu exista";
else cout<<"Exista";
*/
///d)numar de aparitii
/*
aux=inc;
int ap=0,numar;
cout<<"Numarul de cautat: ";cin>>numar;
while(aux!=NULL)
{
if(aux->nr==numar) ap++;
aux=aux->urm;
}
cout<<"Numar aparitii "<<numar<<": "<<ap;
*/
///e)afisare numere pare
/*
cout<<"Numere pare: ";
aux=inc;
while(aux!=NULL)
{
if(aux->nr%2==0) cout<<aux->nr<<' ';
aux=aux->urm;
}
*/
///f)afisare prime
/*
cout<<"Numere prime: ";
aux=inc;
int prim,d;
while(aux!=NULL)
{
prim=1;
if(aux->nr==0 || aux->nr==1) prim=0;
else for(d=2;d<=aux->nr/2 && prim==1;d++)
if(aux->nr%d==0) prim=0;
if(prim==1) cout<<aux->nr<<' ';
aux=aux->urm;
}
*/
///g)dublare valori pozitive
/*

aux=inc;
while(aux!=NULL)
{
if(aux->nr>0) aux->nr=(aux->nr)*2;
aux=aux->urm;
}
*/
///h)stergere element citit de la tastatura
/*
int x;
cout<<"Elementul de sters: ";cin>>x;
aux=inc;
do{
if(inc==sf && sf->nr==x)
{
delete inc;
inc=sf=NULL;
aux=NULL;
}
else if(inc->nr==x)
{
aux=inc;
inc=inc->urm;
delete aux;
}
else if(sf->nr==x)
{
aux=inc;
while(aux->urm!=sf)
aux=aux->urm;
sf=aux;
aux=aux->urm;
delete aux;
sf->urm=NULL;
}
else
{
aux=inc;
while(aux!=NULL && aux->nr!=x)
aux=aux->urm;
if(aux!=NULL)
{
aux2=inc;
while(aux2->urm!=aux)
aux2=aux2->urm;
aux2->urm=aux->urm;
delete aux;
}
}
}while(aux!=NULL);
*/
///i)numarare elemente ramase
/*

int nrelem=0;
aux=inc;
while(aux!=NULL)
{
nrelem++;
aux=aux->urm;
}
cout<<"Numar elemente ramase: "<<nrelem;
*/
///j)afisare in ordine inversa
/*
aux=sf;
cout<<aux->nr<<' ';
do{
aux2=inc;
while(aux2->urm!=aux)
aux2=aux2->urm;
aux=aux2;
cout<<aux2->nr<<' ';
}while(aux2!=inc);
*/
cout << endl;
cout<<"Lista noua: ";
aux = inc;
while (aux != NULL)
{
cout << aux->nr << ' ';
aux = aux->urm;
}
}
          2
#include <iostream>
using namespace std;
struct elem{
int nr;
elem *urm,*ant;
}*inc,*sf,*aux,*aux2;
int prim(int x)
{
int d;
if(x<=1) return 0;
else for(d=2;d<=x/2;d++)
if(x%d==0) return 0;
return 1;
}
int main()
{
inc=new elem;
cin>>inc->nr;
inc->urm=inc->ant=NULL;
sf=inc;
int i;
for(i=2;i<=7;i++)
{
aux=new elem;
cin>>aux->nr;
aux->urm=NULL;
aux->ant=sf;
sf->urm=aux;
sf=aux;
}
cout<<"Lista: ";
aux = inc;
while (aux != NULL)
{
cout << aux->nr << ' ';
aux = aux->urm;
}
cout << endl;
///a)adaugare element la inceputul listei
/*
aux=new elem;
cin>>aux->nr;
aux->urm=inc;

aux->ant=NULL;
inc->ant=aux;
inc=aux;
*/
///b)stergerea penultimului element
/*
aux=sf->ant;
aux2=aux->ant;
sf->ant=aux2;
delete aux;
aux2->urm=sf;
*/
///c)stergerea numerelor prime
/*
do{
if(inc==sf && prim(inc->nr)==1)
{
aux=inc;
delete aux;
inc=sf=NULL;
}
else if(prim(inc->nr)==1)
{
aux=inc;
inc=inc->urm;
delete aux;
inc->ant=NULL;
}
else if(prim(sf->nr)==1)
{
aux=sf;
sf=aux->ant;
delete aux;
sf->urm=NULL;
}
else {
aux=inc;
while(aux!=NULL && prim(aux->nr)!=1)
aux=aux->urm;
if(aux!=NULL)
{
aux2=aux;
aux=aux->urm;
aux->ant=aux2->ant;
aux=aux2->ant;
aux->urm=aux2->urm;
delete aux2;
}
}
}while(aux!=NULL);
*/
///d)afisarea numarului elementelor din lista si valoarea

/*
cout<<endl;
int nrelem=0;
aux=inc;
while(aux!=NULL)
{
cout<<aux->nr<<' ';
aux=aux->urm;
nrelem++;
}
cout<<endl<<nrelem;
*/
///e)afisarea in ordinea elementelor si in ordine inversa
/*
cout<<endl;
aux=inc;
while(aux!=NULL)
{
cout<<aux->nr<<' ';
aux=aux->urm;
}
cout<<endl;
aux=sf;
while(aux!=NULL)
{
cout<<aux->nr<<' ';
aux=aux->ant;
}
*/
cout << endl;
cout<<"Lista noua: ";
aux = inc;
while (aux != NULL)
{
cout << aux->nr << ' ';
aux = aux->urm;
}
return 0;
}
